// http://ionicframework.com/docs/theming/



ion-card-header {
  color: white !important;
  background-color: color($colors, primary);
  border-radius: 5px 5px 0 0;
}

.back-button.show-back-button {
  display: inline-block;
  left: 5px;
}


.labelColorRed ion-label {
  border-left: 2px solid color($colors, danger);
  padding-left: 10px;
}

.labelColorBlue ion-label {
  border-left: 2px solid color($colors, primary);
  padding-left: 10px;
}

.BigButton {
  font-size: 2.5rem;
}
//Iconos de los tabs

.ion-ios-app_notebook,
.ion-md-app_notebook {
  content: url(../assets/imgs/notebook.svg);
  width: 24px;
  height: 32px;
  padding: 6px 4px 2px;
  opacity: 0.9;
}
.app_nogal{
  width: 45px;
  height: 45px;
  padding: 1px 1px 1px 1px;
  
 
}

.toolbar-ios {
  padding: 4px;
  padding-left: 4px;
  padding-right: 4px;
  padding-bottom: 4px;
  // min-height: 50px;
}


.ion-ios-app_notebook-outline,
.ion-md-app_notebook-outline {
  content: url(../assets/imgs/notebook.svg);
  width: 24px;
  height: 32px;
  padding: 6px 4px 2px;
  opacity: 0.2;
}


.ion-ios-app_stopwatch,
.ion-md-app_stopwatch {
  content: url(../assets/imgs/stopwatch.svg);
  width: 24px;
  height: 32px;
  padding: 6px 4px 2px;
  opacity: 0.9;
}

.ion-ios-app_stopwatch-outline,
.ion-md-app_stopwatch-outline {
  content: url(../assets/imgs/stopwatch.svg);
  width: 24px;
  height: 32px;
  padding: 6px 4px 2px;
  opacity: 0.2;
}
.ion-ios-app_questionary,
.ion-md-app_questionary {
  content: url(../assets/imgs/questionary.svg);
  width: 24px;
  height: 32px;
  padding: 6px 4px 2px;
  opacity: 0.9;
}

.ion-ios-app_questionary-outline,
.ion-md-app_questionary-outline {
  content: url(../assets/imgs/questionary.svg);
  width: 24px;
  height: 32px;
  padding: 6px 4px 2px;
  opacity: 0.2;
}

.ion-ios-app_calendar,
.ion-md-app_calendar {
  content: url(../assets/imgs/calendar.svg);
  width: 24px;
  height: 32px;
  padding: 6px 4px 2px;
  opacity: 0.9;
}

.ion-ios-app_nogal,
.ion-md-app_nogal {
  content: url(../assets/icon/icon.png);
  width: 24px;
  height: 32px;
  padding: 6px 4px 2px;
  opacity: 0.9;
}

.ion-ios-app_nogal-outline,
.ion-md-app_nogal-outline {
  content: url(../assets/icon/icon.png);
  width: 24px;
  height: 32px;
  padding: 6px 4px 2px;
  opacity: 0.2;
}
.transparent{
  background-color: transparent;
}
.ion-ios-app_invited,
.ion-md-app_invited {
  content: url(../assets/imgs/guest-post.svg);
  width: 24px;
  height: 32px;
  padding: 6px 4px 2px;
  opacity: 0.9;
}

.ion-ios-app_invited-outline,
.ion-md-app_invited-outline {
  content: url(../assets/imgs/guest-post.svg);
  width: 24px;
  height: 32px;
  padding: 6px 4px 2px;
  opacity: 0.2;
}



//networking

.ion-ios-app_networking,
.ion-md-app_networking {
  content: url(../assets/imgs/networking.svg);
  width: 24px;
  height: 32px;
  padding: 6px 4px 2px;
  opacity: 0.9;
}

.ion-ios-app_networking-outline,
.ion-md-app_networking-outline {
  content: url(../assets/imgs/networking.svg);
  width: 24px;
  height: 32px;
  padding: 6px 4px 2px;
  opacity: 0.2;
}

//settings
.ion-ios-app_settings,
.ion-md-app_settings {
  content: url(../assets/imgs/profile-gray.svg);
  width: 24px;
  height: 32px;
  padding: 6px 4px 2px;
  opacity: 0.9;
}

.ion-ios-app_settings-outline,
.ion-md-app_settings-outline {
  content: url(../assets/imgs/profile-gray.svg);
  width: 24px;
  height: 32px;
  padding: 6px 4px 2px;
  opacity: 0.2;
}

.ion-ios-app_calendar-outline,
.ion-md-app_calendar-outline {
  content: url(../assets/imgs/calendar.svg);
  width: 24px;
  height: 32px;
  padding: 6px 4px 2px;
  opacity: 0.2;
}


.ion-ios-app_handshake,
.ion-md-app_handshake {
  content: url(../assets/imgs/handshake.svg);
  width: 24px;
  height: 32px;
  padding: 6px 4px 2px;
  opacity: 0.9;
}

.ion-ios-app_handshake-outline,
.ion-md-app_handshake-outline {
  content: url(../assets/imgs/handshake.svg);
  width: 24px;
  height: 32px;
  padding: 6px 4px 2px;
  opacity: 0.2;
}

.ion-ios-app_hotel,
.ion-md-app_hotel {
  content: url(../assets/imgs/hotel.svg);
  width: 24px;
  height: 32px;
  padding: 6px 4px 2px;
  opacity: 0.9;
}

.ion-ios-app_hotel-outline,
.ion-md-app_hotel-outline {
  content: url(../assets/imgs/hotel.svg);
  width: 24px;
  height: 32px;
  padding: 6px 4px 2px;
  opacity: 0.2;
}


// Clases con animaciones

.toogle {
  animation-name: sobreponer;
  animation-duration: 1.5s;
  animation-timing-function: ease-out;
  animation-delay: 0;
  animation-direction: alternate;
  animation-iteration-count: infinite;
  animation-fill-mode: none;
  animation-play-state: running;
}
.element {
  margin: 0 auto;
  background-color: red;
  animation-name: stretch;
  animation-duration: 1.5s;
  animation-timing-function: ease-out;
  animation-delay: 0;
  animation-direction: alternate;
  animation-iteration-count: infinite;
  animation-fill-mode: none;
  animation-play-state: running;
}
.elementCar {
  margin: 0 auto;
  animation-name: shake;
  animation-duration: 1.5s;
  animation-timing-function: ease-out;
  animation-delay: 0;
  animation-direction: alternate;
  animation-iteration-count: infinite;
  animation-fill-mode: none;
  animation-play-state: running;
}

.slide-in-both-ways {
  animation: slideInBothWays ease-in 1;
  animation-duration: 750ms;
}

.animate-in-primary {
  -webkit-animation: animateInPrimary;
  animation: animateInPrimary;
  -webkit-animation-duration: 750ms;
  animation-duraton: 750ms;
}

.animate-in-secondary {
  -webkit-animation: animateInSecondary ease-in 1;
  animation: animateInSecondary ease-in 1;
  -webkit-animation-duration: 750ms;
  animation-duraton: 750ms;
}

.bounce-animation {
  -webkit-animation: bounce ease-in 1;
  animation: bounce ease-in 1;
  -webkit-animation-duration: 1000ms;
  animation-duration: 1000ms;
}
// Animaciones
@-webkit-keyframes slideInBothWays {
  0% {
    transform: translate3d(-100%,0,0);
  }

  50% {
    transform: translate3d(50%,0,0);
  }

  100% {
    transform: translate3d(0,0,0);
  }
}
@keyframes sobreponer {
  0% {
    transform: scale(1);
  }

  50% {
    transform: scale(1.05);
  }

  100% {
    transform: scale(1.08);
  }
}
@keyframes stretch {
  0% {
    transform: scale(.8);
    background-color: color($colors, light);
    border-radius: 100%;
  }

  50% {
    background-color: color($colors, primary);
  }

  100% {
    transform: scale(1.1);
    background-color: color($colors, primary);
  }
}
@keyframes stretch2 {
  0% {
    transform: scale(.8);   
    border-radius: 100%;
  }

  50% {  
  }

  100% {
    transform: scale(1.1); 
  }
}
@-webkit-keyframes animateInPrimary {
  0% {
    -webkit-transform: translate3d(-100%,0,0);
  }

  100% {
    -webkit-transform: translate3d(0,0,0);
  }
}
@-webkit-keyframes animateInSecondary {
  0% {
    opacity: 0;
  }

  50% {
    opacity: 0;
  }

  100% {
    opacity: 1;
  }
}
@-webkit-keyframes bounce {
  0% {
    -webkit-transform: translate3d(0,0,0);
  }

  25% {
    -webkit-transform: translate3d(0,-30%,0);
  }

  50% {
    -webkit-transform: translate3d(0,0,0);
  }

  75% {
    -webkit-transform: translate3d(0,-30%,0);
  }

  100% {
    -webkit-transform: translate3d(0,0,0);
  }
}
@keyframes shake {
  10%, 90% {
    transform: translate3d(-1px, 0, 0);
  }
  
  20%, 80% {
    transform: translate3d(2px, 0, 0);
  }

  30%, 50%, 70% {
    transform: translate3d(-4px, 0, 0);
  }

  40%, 60% {
    transform: translate3d(4px, 0, 0);
  }
}



.element-aparecer{
  animation: animationFrames ease 1s;
  animation-iteration-count: 1;
  transform-origin: 50% 50%;
  animation-fill-mode:forwards; /*when the spec is finished*/
  -webkit-animation: animationFrames ease 1s;
  -webkit-animation-iteration-count: 1;
  -webkit-transform-origin: 50% 50%;
  -webkit-animation-fill-mode:forwards; /*Chrome 16+, Safari 4+*/ 
  -moz-animation: animationFrames ease 1s;
  -moz-animation-iteration-count: 1;
  -moz-transform-origin: 50% 50%;
  -moz-animation-fill-mode:forwards; /*FF 5+*/
  -o-animation: animationFrames ease 1s;
  -o-animation-iteration-count: 1;
  -o-transform-origin: 50% 50%;
  -o-animation-fill-mode:forwards; /*Not implemented yet*/
  -ms-animation: animationFrames ease 1s;
  -ms-animation-iteration-count: 1;
  -ms-transform-origin: 50% 50%;
  -ms-animation-fill-mode:forwards; /*IE 10+*/
}

@keyframes animationFrames{
  0% {
    opacity:0;
    transform:  translate(0px,-25px)  ;
  }
  100% {
    opacity:1;
    transform:  translate(0px,0px)  ;
  }
}

@-moz-keyframes animationFrames{
  0% {
    opacity:0;
    -moz-transform:  translate(0px,-25px)  ;
  }
  100% {
    opacity:1;
    -moz-transform:  translate(0px,0px)  ;
  }
}

@-webkit-keyframes animationFrames {
  0% {
    opacity:0;
    -webkit-transform:  translate(0px,-25px)  ;
  }
  100% {
    opacity:1;
    -webkit-transform:  translate(0px,0px)  ;
  }
}
@-o-keyframes animationFrames {
  0% {
    opacity:0;
    -o-transform:  translate(0px,-25px)  ;
  }
  100% {
    opacity:1;
    -o-transform:  translate(0px,0px)  ;
  }
}

@-ms-keyframes animationFrames {
  0% {
    opacity:0;
    -ms-transform:  translate(0px,-25px)  ;
  }
  100% {
    opacity:1;
    -ms-transform:  translate(0px,0px)  ;
  }
}
$animationDuration: 2.0s;
$sandColor: white;
$backgroundColor: lightgray;
$capColor: #E24927;
$glassColor: lighten(#341F53,0);

.hourglassBackground {
    position: relative;
    background-color: $backgroundColor;
    height: 130px;
    width: 130px;
    border-radius: 50%;
    margin: 30px auto;
}
.hourglassContainer {
    position: absolute;
    top: 30px;
    left: 40px;
    width: 50px;
    height: 70px;
    animation: hourglassRotate $animationDuration ease-in 0s infinite;
    transform-style: preserve-3d;
    perspective: 1000px;
    div,
    div:before,
    div:after { transform-style: preserve-3d; }
}
@keyframes hourglassRotate { 
    0%    { transform: rotateX(0deg); }
    50%   { transform: rotateX(180deg); }
    100%  { transform: rotateX(180deg); }
}


[class^="hourglassCap"] {
    position: absolute;
    left: 0;
    height: 5px;
    width: 50px;
    background-color: $capColor;
    &:before,
    &:after {
        content: "";
        display: block;
        position: absolute;
        border-radius: 50%;
        width: 50px;
        height: 50px;
        transform: rotateX(90deg);
        background-color: $capColor;
    }
}
.hourglassCapTop {
    top: 0;
    &:before { top: -25px; }
    &:after { top: -20px; }
}

.hourglassCapBottom {
    bottom: 0;
    &:before { bottom: -25px; }
    &:after { bottom: -20px; }
}

.hourglassGlassTop {
    transform: rotateX(90deg);
    position: absolute;
    top: -16px;
    left: 3px;
    border-radius: 50%;
    width: 44px;
    height: 44px;
    background-color: $glassColor;
}

.hourglassGlass {
    perspective: 100px;
    position: absolute;
    top: 32px;
    left: 20px;
    width: 10px;
    height: 6px;
    background-color: $glassColor;
    &:before,
    &:after {
        content: "";
        display: block;
        position: absolute;
        background-color: $glassColor;
        left: -17px;
        width: 44px;
        height: 28px;
    }
    &:before {
        top: -27px;
        border-radius: 0 0 25px 25px;
    }
    &:after {
        bottom: -27px;
        border-radius: 25px 25px 0 0;
    }
}

.hourglassCurves {
    &:before,
    &:after {
        content: "";
        display: block;
        position: absolute;
        top: 32px;
        width: 6px;
        height: 6px;
        border-radius: 50%;
        background-color: $backgroundColor;
        animation: hideCurves $animationDuration ease-in 0s infinite;
    }
    &:before { left: 15px; }
    &:after { left: 29px; }
}
@keyframes hideCurves { 
    0%    { opacity: 1; }
    25%   { opacity: 0; }
    30%   { opacity: 0; }
    40%   { opacity: 1; }
    100%  { opacity: 1; }
}

.hourglassSandStream {
    &:before {
        content: "";
        display: block;
        position: absolute;
        left: 24px;
        width: 3px;
        background-color: $sandColor;
        animation: sandStream1 $animationDuration ease-in 0s infinite;
    }
    &:after {
        content: "";
        display: block;
        position: absolute;
        top: 36px;
        left: 19px;
        border-left: 6px solid transparent;
        border-right: 6px solid transparent;
        border-bottom: 6px solid #fff;
        animation: sandStream2 $animationDuration ease-in 0s infinite;
    }
}
@keyframes sandStream1 { 
    0%      { height: 0;    top: 35px; }
    50%     { height: 0;    top: 45px; }
    60%     { height: 35px; top: 8px; }
    85%     { height: 35px; top: 8px; }
    100%    { height: 0;    top: 8px; }
}
@keyframes sandStream2 { 
    0%      { opacity: 0; }
    50%     { opacity: 0; }
    51%     { opacity: 1; }
    90%     { opacity: 1; }
    91%     { opacity: 0; }
    100%    { opacity: 0; }
}
.hourglassSand {
    &:before,
    &:after {
        content: "";
        display: block;
        position: absolute;
        left: 6px;
        background-color: $sandColor;
        perspective: 500px;
    }
    &:before {
        top: 8px;
        width: 39px;
        border-radius: 3px 3px 30px 30px;
        animation: sandFillup $animationDuration ease-in 0s infinite;
    }
    &:after {
        border-radius: 30px 30px 3px 3px;
        animation: sandDeplete $animationDuration ease-in 0s infinite;
    }
}
@keyframes sandFillup { 
    0%      { opacity: 0; height: 0; }
    60%     { opacity: 1; height: 0; }
    100%    { opacity: 1; height: 17px; }
}
@keyframes sandDeplete { 
    0%      { opacity: 0; top: 45px; height: 17px; width: 38px; left: 6px; } // prevents flickering
    1%      { opacity: 1; top: 45px; height: 17px; width: 38px; left: 6px; }
    24%     { opacity: 1; top: 45px; height: 17px; width: 38px; left: 6px; }
    25%     { opacity: 1; top: 41px; height: 17px; width: 38px; left: 6px; }
    50%     { opacity: 1; top: 41px; height: 17px; width: 38px; left: 6px; }
    90%     { opacity: 1; top: 41px; height: 0;    width: 10px; left: 20px; }
}

/* 
  ##Device = Desktops
  ##Screen = 1281px to higher resolution desktops
*/

@media (min-width: 1281px) {
  
  //CSS
  
}

/* 
  ##Device = Laptops, Desktops
  ##Screen = B/w 1025px to 1280px
*/

@media (min-width: 1025px) and (max-width: 1280px) {
  
  //CSS
  
}

/* 
  ##Device = Tablets, Ipads (portrait)
  ##Screen = B/w 768px to 1024px
*/

@media (min-width: 768px) and (max-width: 1024px) {
  
  //CSS
  
}

/* 
  ##Device = Tablets, Ipads (landscape)
  ##Screen = B/w 768px to 1024px
*/

@media (min-width: 768px) and (max-width: 1024px) and (orientation: landscape) {
  
  //CSS
  
}

/* 
  ##Device = Low Resolution Tablets, Mobiles (Landscape)
  ##Screen = B/w 481px to 767px
*/

@media (min-width: 481px) and (max-width: 767px) {
  
  //CSS
  
}

/* 
  ##Device = Most of the Smartphones Mobiles (Portrait)
  ##Screen = B/w 320px to 479px
*/

@media (min-width: 320px) and (max-width: 480px) {
  
  //CSS
  .item-ios p {
    overflow: inherit;
    font-size: 1.2rem;
    line-height: normal;
    text-overflow: inherit;
    color: #8e9093;
    margin: 0 0 2px;
  }
  
}

@media (min-width: 200px) and (max-width: 320px) {
  
  //CSS

.item-ios {
  padding-left: 16px;
  padding-left: 16px;
  border-radius: 0;
  position: relative;
  font-size: 1.3rem;
  color: #000;
  // background-color: #fff;
  -webkit-transition: background-color 200ms linear;
  transition: background-color 200ms linear;
}

.item-ios h2 {
  margin: 0 0 2px;
  font-size: 1.3rem;
  font-weight: normal;
}
.item-ios p {
  overflow: inherit;
  font-size: 1rem;
  line-height: normal;
  text-overflow: inherit;
  color: #8e9093;
  margin: 0 0 2px;
}
.toolbar-title-ios {
  text-align: center;
  font-size: 1.2rem;
  font-weight: 600;
  color: #000;
  pointer-events: auto;
}
.bar-button-ios {
  padding: 0 4px;
  border-radius: 4px;
  height: 32px;
  border: 0;
  font-size: 1.3rem;
}
.item-ios h3, .item-ios h4, .item-ios h5, .item-ios h6 {
  margin: 0 0 3px;
  font-size: 1.2rem;
  font-weight: normal;
  line-height: normal;
}
}
#divFooterSeven{
  bottom:0px;
  position:absolute;
  color:gray;
  margin-left: 25px;
  font-weight: bold;
}

#divFotterDigital{
  position:absolute;
  bottom:0px;
  right: 0px;
  color:gray;
  margin-right: 25px;
  font-weight: bold;
}


ion-tabs {
  overflow-x: scroll;
}

//css para los modales nuevos de networking,la clase se inscrusta cuando se crea el modal

  .alert-ios.alert-nogal {
    font-family: raleway;
    .alert-wrapper{

     
      background-color: #f2f2f2;
      
    }
    .alert-title {
      margin-top: 8px;
      font-size: 17px;
      font-weight: 600;
    color:#2F2260;
  }
  .alert-sub-title{

    color:#2F2260;
  }

  .alert-button-group {
   
    background-color:#FB512C;
   
}
.alert-button{

  color:white;
}
.alert-button.activated {
  background-color: #2F2260;

}



}


.alert-ios.alert-nogal-primary {
  font-family: raleway;
  .alert-wrapper{

   
    background-color: #f2f2f2;
    
  }
  .alert-title {
    margin-top: 8px;
    font-size: 17px;
    font-weight: 600;
  color:#488aff;
}
.alert-sub-title{

  color:#488aff;
}

.alert-button-group {
 
  background-color:#896D4B;
 
}
.alert-button{

color:white;
}
.alert-button.activated {
background-color: #488aff;

}



}
// App Global Sass
// --------------------------------------------------
// Put style rules here that you want to apply globally. These
// styles are for the entire app and not just one component.
// Additionally, this file can be also used as an entry point
// to import other Sass files to be included in the output CSS.
//
// Shared Sass variables, which can be used to adjust Ionic's
// default Sass variables, belong in "theme/variables.scss".
//
// To declare rules for a specific mode, create a child rule
// for the .md, .ios, or .wp mode classes. The mode class is
// automatically applied to the <body> element in the app.



