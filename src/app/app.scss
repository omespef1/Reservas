// http://ionicframework.com/docs/theming/

@-webkit-keyframes slideInBothWays {
  0% {
    transform: translate3d(-100%,0,0);
  }

  50% {
    transform: translate3d(50%,0,0);
  }

  100% {
    transform: translate3d(0,0,0);
  }
}

.slide-in-both-ways {
  animation: slideInBothWays ease-in 1;
  animation-duration: 750ms;
}
.content-ios {
  background-color: #F4F4F7;
}
.element {
  margin: 0 auto;
  background-color: red;
  animation-name: stretch;
  animation-duration: 1.5s;
  animation-timing-function: ease-out;
  animation-delay: 0;
  animation-direction: alternate;
  animation-iteration-count: infinite;
  animation-fill-mode: none;
  animation-play-state: running;
}

@keyframes stretch {
  0% {
    transform: scale(.4);
    background-color: color($colors, primary);
    border-radius: 100%;
  }
  50% {
    background-color: color($colors, danger);
  }
  100% {
    transform: scale(1.1);
    background-color: color($colors, danger);
  }
}
.toogle{
  animation-name: sobreponer;
  animation-duration: 1.5s;
  animation-timing-function: ease-out;
  animation-delay: 0;
  animation-direction: alternate;
  animation-iteration-count: infinite;
  animation-fill-mode: none;
  animation-play-state: running;
}
@keyframes sobreponer {
  0% {
    transform: scale(.8);

  }
  50% {
    transform: scale(.5);
  }
  100% {
    transform: scale(1.1);

  }
}


// App Global Sass
// --------------------------------------------------
// Put style rules here that you want to apply globally. These
// styles are for the entire app and not just one component.
// Additionally, this file can be also used as an entry point
// to import other Sass files to be included in the output CSS.
//
// Shared Sass variables, which can be used to adjust Ionic's
// default Sass variables, belong in "theme/variables.scss".
//
// To declare rules for a specific mode, create a child rule
// for the .md, .ios, or .wp mode classes. The mode class is
// automatically applied to the <body> element in the app.
